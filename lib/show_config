#!/usr/bin/env bash

# shellcheck shell=bash

# ``````````````````````````````````````````````````````````````````````````````
# Function name: show_config()
#
# Description:
#   Show config.
#
# Usage:
#   show_config
#
# Examples:
#   show_config
#

function show_config() {

  # shellcheck disable=SC2034
  local _FUNCTION_ID="show_config"
  local _STATE=0

  # shellcheck disable=SC2154
  if [[ "$session_type" == "main" ]] ; then

    local _session_arg="$2"

  elif [[ "$session_type" == "module" ]] ; then

    local _session_arg="$3"

  fi

  # shellcheck disable=SC2154
  for _svar in "${_variables_stack[@]}" ; do

    _key_description=$(echo "$_svar" | awk -v FS="(:|:)" '{print $1}')
    _key_id=$(echo "$_svar" | awk -v FS="(:|:)" '{print $2}')
    _key_var=$(echo "$_svar" | awk -v FS="(:|:)" '{print $3}')

    if [[ -z "$_key_id" ]] ; then

      printf "stdout: %s\n" "invalid session param"

    fi

    if [[ "$_key_id" != "web" ]] || [[ "$_key_id" != "db" ]] ; then

      _i="" ; eval _i='$'"$_key_var"

    else

      _i="true"

    fi

    # Show specific key.
    if [[ "$_session_arg" == "$_key_id" ]] ; then

      # Print without key value.
      if [[ -z "$_i" ]] ; then

        printf "\n  Description: %s\n  { \"\e[0;38m%s\e[m\":\"\e[0;36m%s\e[m\" }\n\n" "$_key_description" "$_key_id" ""

      # Print with key value.
      else

        if [[ "$_key_id" == "web" ]] ; then

          printf "\n  Description: %s\n" "$_key_description"

          # shellcheck disable=SC2154
          for i in "${_web_stack[@]}" ; do

            printf "  { \"\e[0;38m%s\e[m\":\"\e[0;36m%s\e[m\" }\n" "$_key_id" "$i"

          done

          printf "\n"

        elif [[ "$_key_id" == "db" ]] ; then

          # shellcheck disable=SC2154
          printf "\n  Description: %s\n" "$_key_description"

          for i in "${_db_stack[@]}" ; do

            printf "  { \"\e[0;38m%s\e[m\":\"\e[0;36m%s\e[m\" }\n" "$_key_id" "$i"

          done

          printf "\n"

        else

          printf "\n  Description: %s\n  { \"\e[0;38m%s\e[m\":\"\e[0;36m%s\e[m\" }\n\n" "$_key_description" "$_key_id" "$_i"

        fi

      fi

    # Show all keys.
    elif [[ -z "$_session_arg" ]] ; then

      # Print without key value.
      if [[ -z "$_i" ]] ; then

        printf "\n  Description: %s\n  { \"\e[0;38m%s\e[m\":\"\e[0;36m%s\e[m\" }\n\n" "$_key_description" "$_key_id" ""

      # Print with key value.
      else

        if [[ "$_key_id" == "web" ]] ; then

          printf "\n  Description: %s\n" "$_key_description"

          for i in "${_web_stack[@]}" ; do

            printf "  { \"\e[0;38m%s\e[m\":\"\e[0;36m%s\e[m\" }\n" "$_key_id" "$i"

          done

          printf "\n"

        elif [[ "$_key_id" == "db" ]] ; then

          printf "\n  Description: %s\n" "$_key_description"

          for i in "${_db_stack[@]}" ; do

            printf "  { \"\e[0;38m%s\e[m\":\"\e[0;36m%s\e[m\" }\n" "$_key_id" "$i"

          done

          printf "\n"

        else

          printf "\n  Description: %s\n  { \"\e[0;38m%s\e[m\":\"\e[0;36m%s\e[m\" }\n\n" "$_key_description" "$_key_id" "$_i"

        fi

      fi

    fi

  done

  return $_STATE

}
