#!/usr/bin/env bash

# shellcheck shell=bash

# ``````````````````````````````````````````````````````````````````````````````
# Function name: init_module()
#
# Description:
#   Load modules.
#
# Usage:
#   init_module
#
# Examples:
#   init_module
#

function init_module() {

  # shellcheck disable=SC2034
  local _FUNCTION_ID="init_module"
  local _STATE=0

  # shellcheck disable=SC2034

  local _type="$1"
  local _argv=("${@:2}")

  # shellcheck disable=SC2034
  export module_name="${_argv[0]}"
  # shellcheck disable=SC2034
  export module_args=("${_argv[@]:1}")
  # shellcheck disable=SC2154
  export module_path="${_modules}/${module_name}.mod"

  if [[ "$_type" == "module" ]] ; then

    if [[ -e "${module_path}" ]] ; then

      # shellcheck disable=SC1090
      source "${module_path}"

      if [[ "${#module_args[@]}" -eq 0 ]] ; then

        # Run module without params.
        ${module_name}

      elif [[ ${module_args[0]} =~ help ]] ; then

        ${module_name}

        # shellcheck disable=SC2154
        printf "%s\n\n" "${_module_opts[0]}"

      elif [[ ${module_args[0]} =~ show ]] ; then

        ${module_name}

        # shellcheck disable=SC2154
        printf "%s\n\n" "${_module_opts[1]}"

      else

        # printf "%s\n" "unknown module argument"
        ${module_name}

      fi

    fi

  elif [[ "$_type" == "command" ]] ; then

    if [[ -e "${module_path}" ]] ; then

      # shellcheck disable=SC1090
      source "${module_path}"

      # printf "%s\n" "unknown module argument"
      ${module_name}

    fi

  else

    printf "stdout: %s\n" "unknown command"

  fi

  return $_STATE

}
