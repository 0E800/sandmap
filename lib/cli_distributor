#!/usr/bin/env bash

# shellcheck shell=bash

# ``````````````````````````````````````````````````````````````````````````````
# Function name: cli_distributor()
#
# Description:
#   Modules distributor.
#
# Usage:
#   cli_distributor
#
# Examples:
#   cli_distributor
#

function cli_distributor() {

  # shellcheck disable=SC2034
  local _FUNCTION_ID="cli_distributor"
  local _STATE=0

  local _argv=("$@")

  # shellcheck disable=SC2154
  if [[ "${_argv[0]}" == "help" ]] ; then

    if [[ "$_in_module" -eq 0 ]] ; then

      if [[ "${#_argv[1]}" -eq 0 ]] ; then

        cli_help

      else

        init_module "${_argv[@]}"
        init_help

      fi

    else

      init_module "${_argv[@]}"
      init_help

    fi

  elif [[ "${_argv[0]}" == "show" ]] ; then

    if [[ "$_in_module" -eq 0 ]] ; then

      if [[ "${#_argv[1]}" -eq 0 ]] ; then

        cli_show

      else

        init_module "${_argv[@]}"
        init_show

      fi

    else

      init_module "${_argv[@]}"
      init_show

    fi

  elif [[ "${_argv[0]}" == "set" ]] ; then

    if [[ "${#_argv[1]}" -eq 0 ]] ; then

      printf "stdout: %s\n" "unknown key"

    else

      if [[ "$_in_module" -eq 0 ]] ; then

        # shellcheck disable=SC2034
        _variables_stack=("${_session_variables[@]}")

      else

        # shellcheck disable=SC2034
        _variables_stack=("${_module_variables[@]}")

      fi

      set_config "${_argv[@]}"

      _session_variables=("${_variables_stack[@]}")

    fi

  elif [[ "${_argv[0]}" == "config" ]] ; then

    if [[ "$_in_module" -eq 0 ]] ; then

      if [[ "${#_argv[1]}" -eq 0 ]] ; then

        # shellcheck disable=SC2034
        session_type="main"

        # shellcheck disable=SC2034
        _variables_stack=("${_session_variables[@]}")

        show_config "${_argv[@]}"

      else

        if (( $(echo "${_argv[@]}" | grep -o "$_fname" | wc -w) == 1 )) ; then

          # shellcheck disable=SC2034
          session_type="module"

          init_module "${_argv[@]}"

          # shellcheck disable=SC2034
          _variables_stack=("${_module_variables[@]}")

          show_config "${_argv[@]}"

        else

          # shellcheck disable=SC2034
          session_type="main"

          # shellcheck disable=SC2034
          _variables_stack=("${_session_variables[@]}")

          show_config "${_argv[@]}"

        fi

      fi

    else

      # shellcheck disable=SC2034
      session_type="module"

      # shellcheck disable=SC2034
      _variables_stack=("${_module_variables[@]}")

      show_config "${_argv[@]}"

    fi

  elif [[ "${_argv[0]}" == "reload" ]] ; then

    if [[ "${_fin[0]}" -eq 0 ]] && [[ "${_fin[1]}" -eq 0 ]]; then

      # shellcheck disable=SC2034
      modules_list=()
      # shellcheck disable=SC2034
      modules_full_list=()
      # ReInitialize modules.
      load_modules

      printf "stdout: %s\n" "modules reloaded"

    fi

  elif [[ "${_argv[0]}" == "use" ]] ; then

    # shellcheck disable=SC2034
    if (( $(echo "${_argv[@]}" | grep -o "$_fname" | wc -w) == 1 )) ; then

      _in_module=1

      # shellcheck disable=SC2034
      _ld_module="$_fname"

      init_module "$_ld_module"

      "$_ld_module"

      # shellcheck disable=SC2034
      __cli_banner="$_fname"

    else

      printf "stdout: %s\n" "unknown command"

    fi

  else

    printf "stdout: %s\n" "unknown command"

  fi

  return $_STATE

}
